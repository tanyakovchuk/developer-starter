{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/index.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/* eslint-disable no-console */\nconsole.log('Webflow Hi!');\n\nconst script = document.createElement('script');\nconst serverIpUrl = 'https://m.essaypro.com/api/auth/ip-fingerprint/';\nscript.src = 'https://cdn.jsdelivr.net/npm/@fingerprintjs/fingerprintjs@3/dist/fp.min.js';\nscript.onload = () => {\n  const resultDiv = document.querySelector('.result');\n  if (!sessionStorage.getItem('fingerprintSent')) {\n    FingerprintJS.load().then((fp) => {\n      fp.get().then(async (result) => {\n        const webGLHashData = await hashDataURL(WebGL_Fingerprinting());\n        const canvasHashData = await hashDataURL(getUnicodeEmojisCanvasFingerprint());\n        const serverIpUrlResponse = await fetch(serverIpUrl);\n        const serverIpUrlJson = await serverIpUrlResponse.json();\n\n        const responseIp = serverIpUrlJson.ip || '';\n        const responseFingerprint = serverIpUrlJson.fingerprint || '';\n        const visitorIdIp = await hashDataURL(result.visitorId + responseIp);\n\n        const fingerprint = {\n          platform: navigator.platform,\n          hardwareConcurrency: navigator.hardwareConcurrency || 0,\n          screen: `${window.screen.width}x${window.screen.height}`,\n          webGLHashData,\n          canvasHashData,\n          timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n          visitorId: result.visitorId,\n          visitorIdIp: visitorIdIp,\n          serverHashData: responseFingerprint,\n          ip: responseIp,\n        };\n\n        displayFingerprint(fingerprint);\n        sessionStorage.setItem('fingerprintSent', 'true');\n      });\n    });\n  } else {\n    resultDiv.innerHTML = '<p>Fingerprint \u0432\u0436\u0435 \u0432\u0456\u0434\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0439 \u0443 \u0446\u044C\u043E\u043C\u0443 \u0441\u0435\u0430\u043D\u0441\u0456.</p>';\n  }\n};\n\ndocument.head.appendChild(script);\n\nasync function hashDataURL(dataURL) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(dataURL);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((byte) => byte.toString(16).padStart(2, '0')).join('');\n  return hashHex.substring(0, 40);\n}\n\nfunction WebGL_Fingerprinting() {\n  const canvas = document.createElement('canvas');\n  const gl = canvas.getContext('webgl');\n  const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\n  if (!debugInfo) {\n    return 'Not Available';\n  }\n  return (\n    gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL) +\n    ' ' +\n    gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)\n  );\n}\n\nfunction getUnicodeEmojisCanvasFingerprint() {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  context.textBaseline = 'top';\n  context.font = '32px Arial';\n\n  const start = 0x1f600;\n  const end = 0x1f64f;\n  let index = 0;\n\n  for (let code = start; code <= end; code++) {\n    const emoji = String.fromCodePoint(code);\n    context.fillText(emoji, (index % 10) * 35, Math.floor(index / 10) * 35);\n    index++;\n  }\n\n  return canvas.toDataURL('image/png');\n}\n\nfunction displayFingerprint(fingerprint) {\n  dataLayer.push({\n    event: 'fingerprintData',\n    data: fingerprint,\n  });\n\n  const resultDiv = document.querySelector('.result');\n  resultDiv.innerHTML = `\n    <p><strong>Platform:</strong> ${fingerprint.platform}</p>\n    <p><strong>Hardware Concurrency:</strong> ${fingerprint.hardwareConcurrency}</p>\n    <p><strong>Screen:</strong> ${fingerprint.screen}</p>\n    <p><strong>Canvas Hash Data:</strong> ${fingerprint.canvasHashData}</p>\n    <p><strong>WebGL Hash Data:</strong> ${fingerprint.webGLHashData}</p>\n    <p><strong>Timezone:</strong> ${fingerprint.timezone}</p>\n    <p><strong>Visitor ID:</strong> ${fingerprint.visitorId}</p>\n    <p><strong>Visitor ID + IP:</strong> ${fingerprint.visitorIdIp}</p>\n    <p><strong>Server Hash Data:</strong> ${fingerprint.serverHashData}</p>\n    <p><strong>IP Address:</strong> ${fingerprint.ip}</p>\n  `;\n}\n"],
  "mappings": "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",
  "names": []
}
